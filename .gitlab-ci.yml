image: maven:3-jdk-11

variables:
  MAVEN_CLI_OPTS: "-s .ci/settings.xml --batch-mode"
  MAVEN_OPTS: "-Dmaven.repo.local=.m2/repository"

cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - .m2/repository/

stages:
  - test
  - build
  - package
  - deploy

##########################################
# nightly
##########################################
deploy:nightly:
  stage: deploy
  only:
    variables:
      - $NIGHTLY_BUILD == "true"
  trigger:
    include: .ci/deploy_nightly.yml
    strategy: depend

##########################################
# PRE-RELEASE
##########################################
deploy:PRE-RELEASE:
  stage: deploy
  only:
    - main@tinyMediaManager/tinyMediaManager
  when: manual
  trigger:
    include: .ci/deploy_prerelease.yml
    strategy: depend

##########################################
# RELEASE
##########################################
deploy:RELEASE:
  stage: deploy
  only:
    - main@tinyMediaManager/tinyMediaManager
  when: manual
  trigger:
    include: .ci/deploy_release.yml
    strategy: depend

##########################################
# DOCKER - RELEASE
##########################################
deploy:DOCKER-RELEASE:
  stage: deploy
  image: docker:latest
  only:
    - main@tinyMediaManager/tinyMediaManager
  when: manual
  services:
    - name: docker:dind
  variables:
    TMM_VERSION: "4.3.3"
    IMAGE_NAME: tinymediamanager/tinymediamanager:${TMM_VERSION}
  script:
    # login
    - docker login -u $DOCKERHUB_USERNAME -p $DOCKERHUB_PASSWORD

    # build
    - cd docker
    - docker build -f Dockerfile -t $IMAGE_NAME .
    - docker tag $IMAGE_NAME tinymediamanager/tinymediamanager:latest

    # push to the registry
    - docker push $IMAGE_NAME
    - docker push tinymediamanager/tinymediamanager:latest

##########################################
# TEST
##########################################
deploy:test:
  stage: deploy
  only:
    variables:
      - $TEST_BUILD == "true"
  when: manual
  trigger:
    include: .ci/deploy_test.yml
    strategy: depend
