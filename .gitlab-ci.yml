image: maven:3-jdk-11

variables:
  MAVEN_CLI_OPTS: "-s .ci/settings.xml --batch-mode"
  MAVEN_OPTS: "-Dmaven.repo.local=.m2/repository"

cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - .m2/repository/

stages:
  - test
  - build
  - package
  - deploy

test:jdk11:
  stage: test
  image: registry.gitlab.com/tinymediamanager/docker/jdk11:20220428182408
  except:
    - main@tinyMediaManager/tinyMediaManager
  only:
    - pushes
  tags:
    - tmm # force running on own runners
  script:
    - mvn $MAVEN_CLI_OPTS -U -DskipTests=false -DskipITs=true -Dmaven.test.failure.ignore=false clean test
  artifacts:
    expire_in: 1 days

test:jdk15:
  stage: test
  image: registry.gitlab.com/tinymediamanager/docker/jdk15:20220428182411
  except:
    - main@tinyMediaManager/tinyMediaManager
  only:
    - pushes
  tags:
    - tmm # force running on own runners
  script:
    - mvn $MAVEN_CLI_OPTS -U -DskipTests=false -DskipITs=true -Dmaven.test.failure.ignore=false clean test
  artifacts:
    expire_in: 1 days

test:jdk16:
  stage: test
  image: registry.gitlab.com/tinymediamanager/docker/jdk16:20220428182411
  except:
    - main@tinyMediaManager/tinyMediaManager
  only:
    - pushes
  tags:
    - tmm # force running on own runners
  script:
    - mvn $MAVEN_CLI_OPTS -U -DskipTests=false -DskipITs=true -Dmaven.test.failure.ignore=false clean test
  artifacts:
    expire_in: 1 days

test:jdk17:
  stage: test
  image: registry.gitlab.com/tinymediamanager/docker/jdk17:20220428182414
  except:
    - main@tinyMediaManager/tinyMediaManager
  only:
    - pushes
  tags:
    - tmm # force running on own runners
  script:
    - mvn $MAVEN_CLI_OPTS -U -DskipTests=false -DskipITs=true -Dmaven.test.failure.ignore=false clean test
  artifacts:
    expire_in: 1 days

# sonarqube analysis
sonarqube-qa:
  stage: test
  image: registry.gitlab.com/tinymediamanager/docker/reporting:20220530063549
  only:
    variables:
      - $QA_BUILD == "true"
  tags:
    - tmm # force running on own runners
  allow_failure: true
  script:
    - mvn $MAVEN_CLI_OPTS clean compile sonar:sonar -Dsonar.projectKey=org.tinymediamanager:tinyMediaManager -Dsonar.organization=tinymediamanager -Dsonar.host.url=https://sonarcloud.io -Dsonar.login=${SONARCLOUD_API_TOKEN}
  artifacts:
    expire_in: 1 days
    paths:
      - target/dependency-check-report.html

##########################################
# nightly
##########################################
deploy:nightly:
  stage: deploy
  only:
    variables:
      - $NIGHTLY_BUILD == "true"
  trigger:
    include: .ci/deploy_nightly.yml
    strategy: depend

##########################################
# PRE-RELEASE
##########################################
deploy:PRE-RELEASE:
  stage: deploy
  only:
    - main@tinyMediaManager/tinyMediaManager
  when: manual
  trigger:
    include: .ci/deploy_prerelease.yml
    strategy: depend

##########################################
# RELEASE
##########################################
deploy:RELEASE:
  stage: deploy
  only:
    - main@tinyMediaManager/tinyMediaManager
  when: manual
  trigger:
    include: .ci/deploy_release.yml
    strategy: depend

##########################################
# DOCKER - RELEASE
##########################################
deploy:DOCKER-RELEASE:
  stage: deploy
  image: docker:latest
  only:
    - main@tinyMediaManager/tinyMediaManager
  when: manual
  services:
    - name: docker:dind
  variables:
    TMM_VERSION: "4.3"
    IMAGE_NAME: tinymediamanager/tinymediamanager:${TMM_VERSION}
  script:
    # login
    - docker login -u $DOCKERHUB_USERNAME -p $DOCKERHUB_PASSWORD

    # build
    - cd docker
    - docker build -f Dockerfile -t $IMAGE_NAME .
    - docker tag $IMAGE_NAME tinymediamanager/tinymediamanager:latest

    # push to the registry
    - docker push $IMAGE_NAME
    - docker push tinymediamanager/tinymediamanager:latest

##########################################
# TEST
##########################################
deploy:test:
  stage: deploy
  only:
    variables:
      - $TEST_BUILD == "true"
  when: manual
  trigger:
    include: .ci/deploy_test.yml
    strategy: depend
