<project name="Tiny Media Manager">

	<property name="build.dir" value="${project.build.directory}/${project.artifactId}-getdown" />
	<property name="lib.dir" value="${build.dir}/lib" />

	<!-- set as property to override in jenkins -->
	<property name="getdown" value="getdown.txt" />

	<target name="setNightly" if="nightly">
		<property name="rev" value="nightly" />
	</target>
	<target name="setPreRelease" if="prerelease">
		<property name="rev" value="prerelease" />
	</target>

	<target name="getdown" description="adds our dependencies to getdown code libs" depends="setNightly, setPreRelease">

		<echo message="=====================================================" />
		<echo message="replacing classpath libs" />
		<echo message="=====================================================" />

		<!-- set SVN revision here - is not set anymore since nightly/prerel -->
		<!-- Only works, if rev is not set to nightly/prerel - so should be fine for release build -->
		<echo message="Rev: ${rev}" />
		<property name="rev" value="${tmmRevision}" />
		<echo message="Rev: ${rev}" />

		<!-- buildinfo -->
		<propertyfile file="${build.dir}/version" comment="This file is automatically generated - DO NOT EDIT">
			<entry key="version" value="${project.version}" />
			<entry key="build" value="${rev}" />
			<entry key="date" value="${tmmTimestamp}" />
		</propertyfile>

		<!-- MacOS buildinfo-->
		<replace file="${build.dir}/macOS/Info.plist" token="%VERSION%" value="${project.version}" />
		<replace file="${build.dir}/macOS/Info.plist" token="%SVNREV%" value="${tmmRevision}" />

		<path id="classpath.default">
			<fileset dir="${lib.dir}">
				<include name="*.jar" />
			</fileset>
		</path>

		<pathconvert property="gd.code" refid="classpath.default" pathsep="">
			<mapper>
				<chainedmapper>
					<flattenmapper />
					<!-- remove absolute path -->
					<!-- add GD + lib/ prefix + newline ;) -->
					<globmapper from="*" to="code = lib/*${line.separator}" />
				</chainedmapper>
			</mapper>
		</pathconvert>
		<!--echo message="${gd.code}" /-->

		<copy file="AppBundler/${getdown}" tofile="${build.dir}/getdown.txt" />
		<replace file="${build.dir}/getdown.txt" token="%CODELIBS%" value="${gd.code}" />

		<echo message="=====================================================" />
		<echo message="generating GetDown files..." />
		<echo message="=====================================================" />
		<taskdef name="digest" classname="com.threerings.getdown.tools.DigesterTask">
			<classpath>
				<!-- ANT module currently does NOT yet include core -->
				<pathelement location="AppBundler/libs/getdown-ant.jar" />
				<pathelement location="AppBundler/libs/getdown-core.jar" />
			</classpath>
		</taskdef>
		<digest appdir="${build.dir}" />

	</target>

</project>