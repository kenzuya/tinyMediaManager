<project name="Tiny Media Manager">

	<!-- build directories -->
	<property name="build.dir" value="target/ant"/>
	<property name="lib.dir" value="${build.dir}/lib"/>
	<property name="dist.dir" value="target/dist"/>

	<!-- set as property to override in jenkins -->
	<property name="getdown" value="getdown-v4.txt"/>

	<path id="classpath.default">
		<fileset dir="${lib.dir}">
			<include name="*.jar"/>
		</fileset>
	</path>

	<target name="setNightly" if="nightly">
		<property name="rev" value="nightly"/>
	</target>
	<target name="setPreRelease" if="prerelease">
		<property name="rev" value="prerelease" />
	</target>

    <target name="package-app" description="builds the packages" depends="setNightly, setPreRelease">
		<delete dir="${build.dir}" />
		<mkdir dir="${build.dir}" />
		<delete dir="${dist.dir}" />
		<mkdir dir="${dist.dir}/win" />

		<!-- set SVN revision here - is not set anymore since nightly/prerel -->
		<!-- Only works, if rev is not set to nightly/prerel - so should be fine for release build -->
		<echo message="Rev: ${rev}" />
		<property name="rev" value="${tmmRevision}" />
		<echo message="Rev: ${rev}" />

		<!-- buildinfo -->
		<propertyfile file="${build.dir}/version" comment="This file is automatically generated - DO NOT EDIT">
			<entry key="version" value="${tmmVersion}" />
			<entry key="build" value="${rev}"/>
			<entry key="date" value="${tmmTimestamp}"/>
		</propertyfile>


		<echo message="====================================================="/>
		<echo message="default files, to include in DIST and GD"/>
		<echo message="====================================================="/>
		<copy file="changelog.txt" todir="${build.dir}"/>
		<copy file="AppBundler/${getdown}" tofile="${build.dir}/getdown.txt"/>
		<copy file="AppBundler/launcher.yml" todir="${build.dir}"/>
		<copy file="LICENSE" todir="${build.dir}"/>
		<copy file="AppBundler/splashscreen.png" todir="${build.dir}"/>
		<copy file="AppBundler/env.txt" todir="${build.dir}"/>
		<copy file="target/${tmmName}-${tmmVersion}.jar" tofile="${build.dir}/tmm.jar"/>

		<copy todir="${build.dir}/native">
			<fileset dir="native"/>
		</copy>

		<!-- zip templates -->
		<tar compression="bzip2" destfile="${build.dir}/templates/templates.tar.bz2"
			 basedir="templates">
		</tar>

		<copy todir="${build.dir}/lib">
			<fileset dir="target/dependency"/>
		</copy>

		<!-- JRE -->
		<copy todir="${build.dir}/jre">
			<fileset dir="jre"/>
		</copy>

		<!-- ===================================================== -->
		<!-- replace classpath -->
		<!-- ===================================================== -->
		<pathconvert property="gd.code" refid="classpath.default" pathsep="">
			<mapper>
				<chainedmapper>
					<flattenmapper/>
					<!-- remove absolute path -->
					<!-- add GD + lib/ prefix + newline ;) -->
					<globmapper from="*" to="code = lib/*${line.separator}" />
				</chainedmapper>
			</mapper>
		</pathconvert>
		<!--echo message="${gd.code}" /-->
		<replace file="${build.dir}/getdown.txt" token="%CODELIBS%" value="${gd.code}"/>

		<echo message="====================================================="/>
		<echo message="prepare build for MacOS X"/>
		<echo message="====================================================="/>
		<copy todir="${dist.dir}/mac/tinyMediaManager.app/Contents">
			<fileset dir="AppBundler/dist-mac"/>
		</copy>
		<replace file="${dist.dir}/mac/tinyMediaManager.app/Contents/Info.plist" token="%VERSION%"
				 value="${tmmVersion}"/>
		<replace file="${dist.dir}/mac/tinyMediaManager.app/Contents/Info.plist" token="%SVNREV%"
				 value="${tmmRevision}"/>
		<chmod file="${dist.dir}/mac/tinyMediaManager.app/Contents/MacOS/tinyMediaManager" perm="ugo+rx"/>
		<copy todir="${dist.dir}/mac/tinyMediaManager.app/Contents/Resources/Java/">
			<fileset dir="${build.dir}">
				<include name="**/*"/>
				<exclude name="native/windows*/**"/>
				<exclude name="native/linux*/**"/>
				<exclude name="jre/jre_windows*"/>
				<exclude name="jre/jre_linux*"/>
			</fileset>
		</copy>

		<echo message="====================================================="/>
		<echo message="prepare build for Windows"/>
		<echo message="====================================================="/>
		<copy todir="${dist.dir}/win">
			<fileset dir="AppBundler/dist-windows"/>
		</copy>
		<copy todir="${dist.dir}/win">
			<fileset dir="${build.dir}">
				<include name="**/*"/>
				<exclude name="native/mac*/**"/>
				<exclude name="native/linux*/**"/>
				<exclude name="jre/jre_macos*"/>
				<exclude name="jre/jre_linux*"/>
			</fileset>
		</copy>

		<echo message="====================================================="/>
		<echo message="prepare build for Linux"/>
		<echo message="====================================================="/>
		<copy todir="${dist.dir}/linux">
			<fileset dir="AppBundler/dist-linux"/>
		</copy>
		<chmod file="${dist.dir}/linux/tinyMediaManager" perm="ugo+rx"/>
		<copy todir="${dist.dir}/linux">
			<fileset dir="${build.dir}">
				<include name="**/*"/>
				<exclude name="native/mac*/**"/>
				<exclude name="native/windows*/**"/>
				<exclude name="jre/jre_macos*"/>
				<exclude name="jre/jre_windows*"/>
			</fileset>
		</copy>

		<echo message="====================================================="/>
		<echo message="default files, NOT to include in DIST, but in GD"/>
		<echo message="====================================================="/>
		<copy file="${dist.dir}/win/tinyMediaManager.exe" todir="${build.dir}"/>
		<copy file="${dist.dir}/linux/tinyMediaManager" todir="${build.dir}"/>
		<copy file="${dist.dir}/mac/tinyMediaManager.app/Contents/MacOS/tinyMediaManager" todir="${build.dir}/macOS"/>
		<copy file="${dist.dir}/mac/tinyMediaManager.app/Contents/Info.plist" todir="${build.dir}/macOS"/>
		<copy file="${dist.dir}/mac/tinyMediaManager.app/Contents/Resources/tmm.icns" todir="${build.dir}/macOS"/>

		<echo message="====================================================="/>
		<echo message="finally create checksums"/>
		<echo message="====================================================="/>
		<taskdef name="digest" classname="com.threerings.getdown.tools.DigesterTask">
			<classpath>
				<!-- ANT module currently does NOT yet include core -->
				<pathelement location="AppBundler/getdown-ant.jar"/>
				<pathelement location="AppBundler/getdown-core.jar"/>
			</classpath>
		</taskdef>
		<digest appdir="${build.dir}" />

		<echo message="=====================================================" />
		<echo message="package for MacOS X" />
		<echo message="=====================================================" />
		<copy file="${build.dir}/digest.txt" todir="${dist.dir}/mac/tinyMediaManager.app/Contents/Resources/Java/" />
		<copy file="${build.dir}/digest2.txt" todir="${dist.dir}/mac/tinyMediaManager.app/Contents/Resources/Java/" />
		<zip destfile="${dist.dir}/tmm_${tmmVersion}_mac.zip" level="9">
			<zipfileset dir="${dist.dir}/mac" excludes="**/tinyMediaManager"/>
			<zipfileset filemode="755" dir="${dist.dir}/mac"
						includes="**/tinyMediaManager"/>
		</zip>

		<echo message="=====================================================" />
		<echo message="package for Windows" />
		<echo message="=====================================================" />
		<copy file="${build.dir}/digest.txt" todir="${dist.dir}/win" />
		<copy file="${build.dir}/digest2.txt" todir="${dist.dir}/win" />
		<zip destfile="${dist.dir}/tmm_${tmmVersion}_win.zip" level="9">
			<zipfileset filemode="755" dir="${dist.dir}/win" />
		</zip>

		<echo message="=====================================================" />
		<echo message="package for Linux" />
		<echo message="=====================================================" />
		<copy file="${build.dir}/digest.txt" todir="${dist.dir}/linux" />
		<copy file="${build.dir}/digest2.txt" todir="${dist.dir}/linux" />
		<tar compression="gzip" destfile="${dist.dir}/tmm_${tmmVersion}_linux.tar.gz">
			<tarfileset dir="${dist.dir}/linux" excludes="tinyMediaManager"/>
			<tarfileset filemode="755" dir="${dist.dir}/linux" includes="tinyMediaManager"/>
		</tar>

		<!-- done, move build dir -->
		<delete dir="build" />
		<move file="${build.dir}" tofile="build" />

		<!-- cleanup dist -->
		<delete dir="dist" />
		<delete dir="${dist.dir}/win" />
		<delete dir="${dist.dir}/mac" />
		<delete dir="${dist.dir}/linux" />

		<!-- create checksums -->
		<checksum algorithm="SHA-1" fileext=".sha1">
			<fileset dir="${dist.dir}">
				<include name="tmm**"/>
			</fileset>
		</checksum>

		<move file="${dist.dir}" tofile="dist" />
	</target>

</project>
