<project name="Tiny Media Manager">

    <!-- build directories -->
    <property name="build.dir" value="target/ant"/>
    <property name="lib.dir" value="${build.dir}/lib"/>
    <property name="dist.dir" value="target/dist"/>

    <!-- set as property to override in jenkins -->
    <property name="getdown" value="getdown.txt"/>

    <path id="classpath.default">
        <fileset dir="${lib.dir}">
            <include name="*.jar"/>
        </fileset>
    </path>

    <target name="setNightly" if="nightly">
        <property name="rev" value="nightly"/>
    </target>
    <target name="setPreRelease" if="prerelease">
        <property name="rev" value="prerelease"/>
    </target>

    <target name="package-app" description="builds the packages" depends="setNightly, setPreRelease">
        <delete dir="${build.dir}"/>
        <mkdir dir="${build.dir}"/>
        <delete dir="${dist.dir}"/>

        <!-- set SVN revision here - is not set anymore since nightly/prerel -->
        <!-- Only works, if rev is not set to nightly/prerel - so should be fine for release build -->
        <echo message="Rev: ${rev}"/>
        <property name="rev" value="${tmmRevision}"/>
        <echo message="Rev: ${rev}"/>

        <!-- buildinfo -->
        <propertyfile file="${build.dir}/version" comment="This file is automatically generated - DO NOT EDIT">
            <entry key="version" value="${tmmVersion}"/>
            <entry key="build" value="${rev}"/>
            <entry key="date" value="${tmmTimestamp}"/>
        </propertyfile>


        <echo message="====================================================="/>
        <echo message="default files, to include in DIST and GD"/>
        <echo message="====================================================="/>
        <copy file="changelog.txt" todir="${build.dir}"/>
        <copy file="AppBundler/${getdown}" tofile="${build.dir}/getdown.txt"/>
        <copy file="AppBundler/launcher.yml" todir="${build.dir}"/>
        <copy file="AppBundler/restart.jar" todir="${build.dir}"/>
        <copy file="LICENSE" todir="${build.dir}"/>
        <copy file="AppBundler/splashscreen.png" todir="${build.dir}"/>
        <copy file="AppBundler/splashscreen@150pct.png" todir="${build.dir}"/>
        <copy file="AppBundler/splashscreen@200pct.png" todir="${build.dir}"/>
        <copy file="AppBundler/env.txt" todir="${build.dir}"/>
        <copy file="AppBundler/tmm.png" todir="${build.dir}"/>
        <copy file="target/${tmmName}-${tmmVersion}.jar" tofile="${build.dir}/tmm.jar"/>

        <copy todir="${build.dir}/native">
            <fileset dir="native"/>
        </copy>

        <!-- zip templates -->
        <tar compression="bzip2" destfile="${build.dir}/templates/templates.tar.bz2"
             basedir="templates">
        </tar>

        <copy todir="${build.dir}/lib">
            <fileset dir="target/dependency"/>
        </copy>

        <!-- JRE -->
        <copy todir="${build.dir}/jre">
            <fileset dir="target/jre"/>
        </copy>

        <!-- ===================================================== -->
        <!-- replace classpath -->
        <!-- ===================================================== -->
        <pathconvert property="gd.code" refid="classpath.default" pathsep="">
            <mapper>
                <chainedmapper>
                    <flattenmapper/>
                    <!-- remove absolute path -->
                    <!-- add GD + lib/ prefix + newline ;) -->
                    <globmapper from="*" to="code = lib/*${line.separator}"/>
                </chainedmapper>
            </mapper>
        </pathconvert>
        <!--echo message="${gd.code}" /-->
        <replace file="${build.dir}/getdown.txt" token="%CODELIBS%" value="${gd.code}"/>

        <!-- ===================================================== -->
        <!-- custom task definitions -->
        <!-- ===================================================== -->
        <taskdef name="digest" classname="com.threerings.getdown.tools.DigesterTask">
            <classpath>
                <!-- ANT module currently does NOT yet include core -->
                <pathelement location="AppBundler/libs/getdown-ant.jar"/>
                <pathelement location="AppBundler/libs/getdown-core.jar"/>
            </classpath>
        </taskdef>

        <!-- ===================================================== -->
        <!-- macOS distributable -->
        <!-- ===================================================== -->
        <echo message="====================================================="/>
        <echo message="prepare build for MacOS X"/>
        <echo message="====================================================="/>
        <copy todir="${dist.dir}/mac/tinyMediaManager.app/Contents">
            <fileset dir="AppBundler/dist-mac"/>
        </copy>
        <copy file="target/launcher/macos/tinyMediaManager"
              tofile="${dist.dir}/mac/tinyMediaManager.app/Contents/MacOS/tinyMediaManager"/>
        <replace file="${dist.dir}/mac/tinyMediaManager.app/Contents/Info.plist" token="%VERSION%"
                 value="${tmmVersion}"/>
        <replace file="${dist.dir}/mac/tinyMediaManager.app/Contents/Info.plist" token="%SVNREV%"
                 value="${tmmRevision}"/>
        <chmod file="${dist.dir}/mac/tinyMediaManager.app/Contents/MacOS/tinyMediaManager" perm="ugo+rx"/>
        <copy todir="${dist.dir}/mac/tinyMediaManager.app/Contents/Resources/Java/">
            <fileset dir="${build.dir}">
                <include name="**/*"/>
                <exclude name="native/windows*/**"/>
                <exclude name="native/linux*/**"/>
                <exclude name="jre/jre-windows*"/>
                <exclude name="jre/jre-linux*"/>
            </fileset>
        </copy>

        <!-- ===================================================== -->
        <!-- Windows distributable -->
        <!-- ===================================================== -->
        <echo message="====================================================="/>
        <echo message="prepare build for Windows"/>
        <echo message="====================================================="/>
        <!--        <copy todir="${dist.dir}/win">-->
        <!--            <fileset dir="AppBundler/dist-windows"/>-->
        <!--        </copy>-->
        <copy file="target/launcher/windows/tinyMediaManager.exe"
              tofile="${dist.dir}/win/tinyMediaManager.exe"/>
        <copy file="target/launcher/windows/tinyMediaManagerCMD.exe"
              tofile="${dist.dir}/win/tinyMediaManagerCMD.exe"/>
        <copy todir="${dist.dir}/win">
            <fileset dir="${build.dir}">
                <include name="**/*"/>
                <exclude name="native/mac*/**"/>
                <exclude name="native/linux*/**"/>
                <exclude name="jre/jre-macos*"/>
                <exclude name="jre/jre-linux*"/>
            </fileset>
        </copy>

        <!-- ===================================================== -->
        <!-- Linux distributable -->
        <!-- ===================================================== -->
        <echo message="====================================================="/>
        <echo message="prepare build for Linux"/>
        <echo message="====================================================="/>
        <!--        <copy todir="${dist.dir}/linux">-->
        <!--            <fileset dir="AppBundler/dist-linux"/>-->
        <!--        </copy>-->
        <copy file="target/launcher/linux/tinyMediaManager"
              tofile="${dist.dir}/linux/tinyMediaManager"/>
        <chmod file="${dist.dir}/linux/tinyMediaManager" perm="ugo+rx"/>
        <copy todir="${dist.dir}/linux">
            <fileset dir="${build.dir}">
                <include name="**/*"/>
                <exclude name="native/mac*/**"/>
                <exclude name="native/windows*/**"/>
                <exclude name="jre/jre-macos*"/>
                <exclude name="jre/jre-windows*"/>
            </fileset>
        </copy>

        <!-- ===================================================== -->
        <!-- ARM (raspberry, ...) distributable -->
        <!-- ===================================================== -->
        <copy file="target/launcher/arm/tinyMediaManager"
              tofile="${dist.dir}/arm/tinyMediaManager-arm"/>
        <chmod file="${dist.dir}/arm/tinyMediaManager-arm" perm="ugo+rx"/>
        <copy todir="${dist.dir}/arm">
            <fileset dir="${build.dir}">
                <include name="**/*"/>
                <exclude name="native/**"/>
                <exclude name="jre/**"/>
            </fileset>
        </copy>

        <!-- ===================================================== -->
        <!-- finalize getdown files -->
        <!-- ===================================================== -->
        <echo message="====================================================="/>
        <echo message="default files, NOT to include in DIST, but in GD"/>
        <echo message="====================================================="/>
        <copy file="${dist.dir}/win/tinyMediaManager.exe" todir="${build.dir}"/>
        <copy file="${dist.dir}/win/tinyMediaManagerCMD.exe" todir="${build.dir}"/>
        <copy file="${dist.dir}/linux/tinyMediaManager" todir="${build.dir}"/>
        <copy file="${dist.dir}/arm/tinyMediaManager-arm" todir="${build.dir}"/>
        <copy file="AppBundler/dist-linux/tinyMediaManager.sh" todir="${build.dir}"/>
        <copy file="${dist.dir}/mac/tinyMediaManager.app/Contents/MacOS/tinyMediaManager"
              todir="${build.dir}/macOS/MacOS"/>
        <copy file="${dist.dir}/mac/tinyMediaManager.app/Contents/MacOS/JavaApplicationStub"
              todir="${build.dir}/macOS/MacOS"/>
        <copy file="${dist.dir}/mac/tinyMediaManager.app/Contents/Info.plist" todir="${build.dir}/macOS/"/>
        <copy file="${dist.dir}/mac/tinyMediaManager.app/Contents/Resources/tmm.icns"
              todir="${build.dir}/macOS/Resources/"/>

        <echo message="====================================================="/>
        <echo message="finally create checksums"/>
        <echo message="====================================================="/>
        <digest appdir="${build.dir}"/>

        <!-- ===================================================== -->
        <!-- package macOS -->
        <!-- ===================================================== -->
        <echo message="====================================================="/>
        <echo message="package for macOS"/>
        <echo message="====================================================="/>
        <copy file="${build.dir}/digest.txt" todir="${dist.dir}/mac/tinyMediaManager.app/Contents/Resources/Java/"/>
        <copy file="${build.dir}/digest2.txt" todir="${dist.dir}/mac/tinyMediaManager.app/Contents/Resources/Java/"/>
        <zip destfile="${dist.dir}/tmm_${tmmVersion}_mac.zip" level="9">
            <zipfileset dir="${dist.dir}/mac" excludes="**/tinyMediaManager"/>
            <zipfileset filemode="755" dir="${dist.dir}/mac"
                        includes="**/tinyMediaManager"/>
        </zip>

        <!-- ===================================================== -->
        <!-- package Windows -->
        <!-- ===================================================== -->
        <echo message="====================================================="/>
        <echo message="package for Windows"/>
        <echo message="====================================================="/>
        <copy file="${build.dir}/digest.txt" todir="${dist.dir}/win"/>
        <copy file="${build.dir}/digest2.txt" todir="${dist.dir}/win"/>
        <zip destfile="${dist.dir}/tmm_${tmmVersion}_win.zip" level="9">
            <zipfileset filemode="755" dir="${dist.dir}/win"/>
        </zip>

        <!-- ===================================================== -->
        <!-- package Linux -->
        <!-- ===================================================== -->
        <echo message="====================================================="/>
        <echo message="package for Linux"/>
        <echo message="====================================================="/>
        <copy file="${build.dir}/digest.txt" todir="${dist.dir}/linux"/>
        <copy file="${build.dir}/digest2.txt" todir="${dist.dir}/linux"/>
        <tar compression="gzip" destfile="${dist.dir}/tmm_${tmmVersion}_linux.tar.gz">
            <tarfileset prefix="tinyMediaManager/" dir="${dist.dir}/linux" excludes="tinyMediaManager"/>
            <tarfileset prefix="tinyMediaManager/" filemode="755" dir="${dist.dir}/linux" includes="tinyMediaManager"/>
        </tar>

        <!-- ===================================================== -->
        <!-- package ARM -->
        <!-- ===================================================== -->
        <echo message="====================================================="/>
        <echo message="package for ARM"/>
        <echo message="====================================================="/>
        <copy file="${build.dir}/digest.txt" todir="${dist.dir}/linux"/>
        <copy file="${build.dir}/digest2.txt" todir="${dist.dir}/linux"/>
        <tar compression="gzip" destfile="${dist.dir}/tmm_${tmmVersion}_arm.tar.gz">
            <tarfileset prefix="tinyMediaManager/" dir="${dist.dir}/arm" excludes="tinyMediaManager-arm"/>
            <tarfileset prefix="tinyMediaManager/" filemode="755" dir="${dist.dir}/arm"
                        includes="tinyMediaManager-arm"/>
        </tar>

        <!-- done, move build dir -->
        <delete dir="build"/>
        <move file="${build.dir}" tofile="build"/>

        <!-- cleanup dist -->
        <delete dir="dist"/>
        <delete dir="${dist.dir}/win"/>
        <delete dir="${dist.dir}/mac"/>
        <delete dir="${dist.dir}/linux"/>
        <delete dir="${dist.dir}/arm"/>

        <!-- create checksums -->
        <checksum algorithm="SHA-1" fileext=".sha1">
            <fileset dir="${dist.dir}">
                <include name="tmm**"/>
            </fileset>
        </checksum>

        <move file="${dist.dir}" tofile="dist"/>
    </target>

</project>
